{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset134 PingFangSC-Regular;
\f3\fnil\fcharset0 Menlo-Bold;\f4\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red83\green101\blue121;\red255\green255\blue255;\red155\green35\blue147;
\red0\green0\blue0;\red92\green38\blue153;\red50\green109\blue116;\red57\green0\blue160;\red196\green26\blue22;
\red36\green82\blue86;}
{\*\expandedcolortbl;;\csgenericrgb\c32401\c39745\c47507;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c60759\c13753\c57628;
\csgenericrgb\c0\c0\c0;\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c13924\c32052\c33684;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\i\fs24 \cf2 \cb3 //
\f1\i0 \cf0 \

\f0\i \cf2 //  ViewController.swift
\f1\i0 \cf0 \

\f0\i \cf2 //  Cam
\f1\i0 \cf0 \

\f0\i \cf2 //
\f1\i0 \cf0 \

\f0\i \cf2 //  Created by MakaloLau on 2020/12/14.
\f1\i0 \cf0 \

\f0\i \cf2 //  Copyright \'a9 2020
\f2\i0 \'c4\'ea
\f0\i  MakaloLau. All rights reserved.
\f1\i0 \cf0 \

\f0\i \cf2 //
\f1\i0 \cf0 \
\

\f3\b \cf4 import
\f4\b0 \cf5  UIKit
\f1 \cf0 \

\f3\b \cf4 import
\f4\b0 \cf5  AVFoundation
\f1 \cf0 \
\

\f0\i \cf2 //
\f2\i0 \'c9\'e3\'cf\'f1\'cd\'b7\'b2\'c9\'bc\'af\'b5\'c4\'ca\'d3\'c6\'b5\'cf\'d4\'ca\'be\'bf\'d8\'bc\'fe
\f1 \cf0 \

\f3\b \cf4 class
\f4\b0 \cf5  PreviewView: \cf6 UIView\cf5  \{
\f1 \cf0 \

\f4 \cf5     
\f3\b \cf4 override
\f4\b0 \cf5  
\f3\b \cf4 class
\f4\b0 \cf5  
\f3\b \cf4 var
\f4\b0 \cf5  layerClass: \cf6 AnyClass\cf5  \{
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 return
\f4\b0 \cf5  \cf6 AVCaptureVideoPreviewLayer\cf5 .
\f3\b \cf4 self
\f1\b0 \cf0 \

\f4 \cf5     \}
\f1 \cf0 \

\f4 \cf5     
\f1 \cf0 \

\f4 \cf5     
\f3\b \cf4 var
\f4\b0 \cf5  videoPreviewLayer: \cf6 AVCaptureVideoPreviewLayer\cf5  \{
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 return
\f4\b0 \cf5  \cf6 layer\cf5  
\f3\b \cf4 as
\f4\b0 \cf5 ! \cf6 AVCaptureVideoPreviewLayer
\f1 \cf0 \

\f4 \cf5     \}
\f1 \cf0 \

\f4 \cf5 \}
\f1 \cf0 \
\

\f0\i \cf2 //
\f2\i0 \'ca\'f4\'d0\'d4\'ba\'cd\'bf\'d8\'d6\'c6\'bf\'d8\'bc\'fe
\f1 \cf0 \

\f3\b \cf4 class
\f4\b0 \cf5  ControlView: \cf6 UIView\cf5  \{
\f1 \cf0 \

\f4 \cf5     
\f0\i \cf2 //
\f2\i0 \'c2\'bc\'d6\'c6\'b0\'b4\'c5\'a5
\f1 \cf0 \

\f4 \cf5     
\f3\b \cf4 var
\f4\b0 \cf5  button:\cf6 UIButton\cf5 !
\f1 \cf0 \

\f4 \cf5     
\f1 \cf0 \

\f4 \cf5     
\f0\i \cf2 //
\f2\i0 \'b3\'f5\'ca\'bc\'bb\'af
\f1 \cf0 \

\f4 \cf5     
\f3\b \cf4 override
\f4\b0 \cf5  
\f3\b \cf4 init
\f4\b0 \cf5 (frame: \cf6 CGRect\cf5 ) \{
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 super
\f4\b0 \cf5 .\cf6 init\cf5 (frame: frame)
\f1 \cf0 \

\f4 \cf5         \cf7 button\cf5  = \cf6 UIButton\cf5 (type: \cf6 UIButton\cf5 .\cf6 ButtonType\cf5 .\cf8 system\cf5 )
\f1 \cf0 \

\f4 \cf5         
\f1 \cf0 \

\f4 \cf5     \}
\f1 \cf0 \

\f4 \cf5     
\f1 \cf0 \

\f4 \cf5     
\f3\b \cf4 required
\f4\b0 \cf5  
\f3\b \cf4 init
\f4\b0 \cf5 ?(coder aDecoder: \cf6 NSCoder\cf5 ) \{
\f1 \cf0 \

\f4 \cf5         \cf8 fatalError\cf5 (\cf9 "init(coder:) has not been implemented"\cf5 )
\f1 \cf0 \

\f4 \cf5     \}
\f1 \cf0 \

\f4 \cf5 \}
\f1 \cf0 \
\

\f3\b \cf4 class
\f4\b0 \cf5  ViewController: \cf6 UIViewController\cf5  \{
\f1 \cf0 \

\f4 \cf5     
\f1 \cf0 \

\f4 \cf5     
\f0\i \cf2 //
\f2\i0 \'c9\'e3\'cf\'f1\'cd\'b7\'b2\'b6\'d7\'bd
\f0\i session
\f1\i0 \cf0 \

\f4 \cf5     
\f3\b \cf4 var
\f4\b0 \cf5  captureSession: \cf6 AVCaptureSession\cf5 !
\f1 \cf0 \

\f4 \cf5     
\f1 \cf0 \

\f4 \cf5     
\f0\i \cf2 //
\f2\i0 \'c9\'e3\'cf\'f1\'cd\'b7\'b3\'f5\'ca\'bc\'bb\'af
\f0\i view
\f1\i0 \cf0 \

\f4 \cf5     
\f3\b \cf4 let
\f4\b0 \cf5  previewView = \cf7 PreviewView\cf5 ()
\f1 \cf0 \
\

\f4 \cf5     
\f3\b \cf4 override
\f4\b0 \cf5  
\f3\b \cf4 func
\f4\b0 \cf5  viewDidLoad() \{
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 super
\f4\b0 \cf5 .\cf8 viewDidLoad\cf5 ()
\f1 \cf0 \

\f4 \cf5         
\f0\i \cf2 // Do any additional setup after loading the view, typically from a nib.
\f1\i0 \cf0 \

\f4 \cf5         
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 switch
\f4\b0 \cf5  \cf6 AVCaptureDevice\cf5 .\cf8 authorizationStatus\cf5 (for: .\cf6 video\cf5 ) \{
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 case
\f4\b0 \cf5  .\cf8 authorized\cf5 :
\f1 \cf0 \

\f4 \cf5             
\f0\i \cf2 // The user has previously granted access to the camera.
\f1\i0 \cf0 \

\f4 \cf5             
\f3\b \cf4 self
\f4\b0 \cf5 .\cf10 initFontCameraSession\cf5 ()
\f1 \cf0 \

\f4 \cf5             
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 case
\f4\b0 \cf5  .\cf8 notDetermined\cf5 :
\f1 \cf0 \

\f4 \cf5             
\f0\i \cf2 // The user has not yet been asked for camera access.
\f1\i0 \cf0 \

\f4 \cf5             \cf6 AVCaptureDevice\cf5 .\cf8 requestAccess\cf5 (for: .\cf6 video\cf5 ) \{ granted 
\f3\b \cf4 in
\f1\b0 \cf0 \

\f4 \cf5                 
\f3\b \cf4 if
\f4\b0 \cf5  granted \{
\f1 \cf0 \

\f4 \cf5                     
\f3\b \cf4 self
\f4\b0 \cf5 .\cf10 initFontCameraSession\cf5 ()
\f1 \cf0 \

\f4 \cf5                 \} 
\f3\b \cf4 else
\f4\b0 \cf5  \{
\f1 \cf0 \

\f4 \cf5                     \cf8 NSLog\cf5 (\cf9 "notDetermined"\cf5 )
\f1 \cf0 \

\f4 \cf5                 \}
\f1 \cf0 \

\f4 \cf5             \}
\f1 \cf0 \

\f4 \cf5             
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 case
\f4\b0 \cf5  .\cf8 denied\cf5 : 
\f0\i \cf2 // The user has previously denied access.
\f1\i0 \cf0 \

\f4 \cf5             \cf8 NSLog\cf5 (\cf9 "denied"\cf5 )
\f1 \cf0 \

\f4 \cf5             
\f3\b \cf4 return
\f1\b0 \cf0 \

\f4 \cf5             
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 case
\f4\b0 \cf5  .\cf8 restricted\cf5 : 
\f0\i \cf2 // The user can't grant access due to restrictions.
\f1\i0 \cf0 \

\f4 \cf5             \cf8 NSLog\cf5 (\cf9 "restricted"\cf5 )
\f1 \cf0 \

\f4 \cf5             
\f3\b \cf4 return
\f1\b0 \cf0 \

\f4 \cf5         \}
\f1 \cf0 \

\f4 \cf5     \}
\f1 \cf0 \
\

\f4 \cf5     
\f0\i \cf2 //
\f2\i0 \'b3\'f5\'ca\'bc\'bb\'af\'c7\'b0\'d6\'c3\'c9\'e3\'cf\'f1\'cd\'b7
\f1 \cf0 \

\f4 \cf5     
\f3\b \cf4 func
\f4\b0 \cf5  initFontCameraSession() \{
\f1 \cf0 \

\f4 \cf5         
\f0\i \cf2 //
\f2\i0 \'b3\'f5\'ca\'bc\'bb\'af\'c9\'e3\'cf\'f1\'cd\'b7\'b2\'b6\'d7\'bd\'b6\'d4\'cf\'f3
\f1 \cf0 \

\f4 \cf5         \cf7 captureSession\cf5  = \cf6 AVCaptureSession\cf5 ()
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 guard
\f4\b0 \cf5  
\f3\b \cf4 let
\f4\b0 \cf5  captureSession = \cf7 captureSession\cf5  
\f3\b \cf4 else
\f4\b0 \cf5  \{
\f1 \cf0 \

\f4 \cf5             
\f3\b \cf4 return
\f1\b0 \cf0 \

\f4 \cf5         \}
\f1 \cf0 \

\f4 \cf5         
\f1 \cf0 \

\f4 \cf5         
\f0\i \cf2 //
\f2\i0 \'bb\'f1\'c8\'a1\'c7\'b0\'d6\'c3\'c9\'e3\'cf\'f1\'cd\'b7\'b2\'a2\'cc\'ed\'bc\'d3\'b5\'bd\'b2\'b6\'d7\'bd
\f0\i session
\f2\i0 \'d6\'d0
\f1 \cf0 \

\f4 \cf5         captureSession.\cf8 beginConfiguration\cf5 ()
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 let
\f4\b0 \cf5  videoDevice = \cf6 AVCaptureDevice\cf5 .\cf8 default\cf5 (.\cf6 builtInWideAngleCamera\cf5 , for: .\cf6 video\cf5 , position: .\cf8 front\cf5 )
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 if
\f4\b0 \cf5  videoDevice == 
\f3\b \cf4 nil
\f4\b0 \cf5  \{
\f1 \cf0 \

\f4 \cf5             \cf8 NSLog\cf5 (\cf9 "video device is null"\cf5 )
\f1 \cf0 \

\f4 \cf5             
\f3\b \cf4 return
\f1\b0 \cf0 \

\f4 \cf5         \}
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 guard
\f4\b0 \cf5  
\f3\b \cf4 let
\f4\b0 \cf5  videoDeviceInput = 
\f3\b \cf4 try
\f4\b0 \cf5 ? \cf6 AVCaptureDeviceInput\cf5 (device: videoDevice!), captureSession.\cf8 canAddInput\cf5 (videoDeviceInput) 
\f3\b \cf4 else
\f4\b0 \cf5  \{
\f1 \cf0 \

\f4 \cf5             \cf8 NSLog\cf5 (\cf9 "get video device input error"\cf5 )
\f1 \cf0 \

\f4 \cf5             
\f3\b \cf4 return
\f1\b0 \cf0 \

\f4 \cf5         \}
\f1 \cf0 \

\f4 \cf5         captureSession.\cf8 addInput\cf5 (videoDeviceInput)
\f1 \cf0 \

\f4 \cf5         
\f1 \cf0 \

\f4 \cf5         
\f0\i \cf2 //
\f2\i0 \'c9\'e8\'d6\'c3\'c9\'e3\'cf\'f1\'cd\'b7\'ca\'e4\'b3\'f6\'b6\'d4\'cf\'f3
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 let
\f4\b0 \cf5  photoOutput = \cf6 AVCapturePhotoOutput\cf5 ()
\f1 \cf0 \

\f4 \cf5         
\f3\b \cf4 guard
\f4\b0 \cf5  captureSession.\cf8 canAddOutput\cf5 (photoOutput) 
\f3\b \cf4 else
\f4\b0 \cf5  \{ 
\f3\b \cf4 return
\f4\b0 \cf5  \}
\f1 \cf0 \

\f4 \cf5         captureSession.\cf6 sessionPreset\cf5  = .\cf6 photo
\f1 \cf0 \

\f4 \cf5         captureSession.\cf8 addOutput\cf5 (photoOutput)
\f1 \cf0 \

\f4 \cf5         captureSession.\cf8 commitConfiguration\cf5 ()
\f1 \cf0 \

\f4 \cf5         
\f1 \cf0 \

\f4 \cf5         
\f0\i \cf2 //
\f2\i0 \'c9\'e8\'d6\'c3\'c9\'e3\'cf\'f1\'cd\'b7\'bb\'ad\'c3\'e6\'b5\'c4\'c7\'f8\'d3\'f2
\f1 \cf0 \

\f4 \cf5         \cf7 previewView\cf5 .\cf6 frame\cf5  = \cf6 view\cf5 .\cf6 bounds
\f1 \cf0 \

\f4 \cf5         \cf7 previewView\cf5 .\cf7 videoPreviewLayer\cf5 .\cf6 session\cf5  = captureSession
\f1 \cf0 \

\f4 \cf5         \cf6 view\cf5 .\cf8 addSubview\cf5 (\cf7 previewView\cf5 )
\f1 \cf0 \

\f4 \cf5     \}
\f1 \cf0 \

\f4 \cf5 \}
\f1 \cf0 \
}